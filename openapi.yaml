openapi: 3.0.3
info:
  title: Deck Builder MTG API
  version: "1.0.0"
  description: >
    API RESTful para criação e gerenciamento de decks de Magic: The Gathering.

servers:
  - url: http://localhost:8080
    description: Servidor local de desenvolvimento

paths:
  /decks:
    get:
      summary: Listar todos os decks
      tags:
        - Decks
      responses:
        '200':
          description: Lista de decks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckDTO'
        '500':
          description: Erro interno
    post:
      summary: Criar novo deck
      tags:
        - Decks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeckDTO'
      responses:
        '201':
          description: Deck criado
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno

  /decks/{id}:
    get:
      summary: Obter detalhes de um deck
      tags:
        - Decks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deck encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckDTO'
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno
    delete:
      summary: Excluir deck
      tags:
        - Decks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deck excluído
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno

  /decks/{id}/cards:
    post:
      summary: Adicionar carta ao deck
      tags:
        - Cartas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartaDTO'
      responses:
        '200':
          description: Carta adicionada
        '400':
          description: Requisição inválida
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno
    get:
      summary: Listar cartas do deck
      tags:
        - Cartas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de cartas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartaDTO'
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno

  /decks/{id}/cards/{cardId}:
    put:
      summary: Atualizar quantidade de carta
      tags:
        - Cartas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantidade:
                  type: integer
      responses:
        '200':
          description: Quantidade atualizada
        '400':
          description: Requisição inválida
        '404':
          description: Carta ou Deck não encontrado
        '500':
          description: Erro interno
    delete:
      summary: Remover carta do deck
      tags:
        - Cartas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Carta removida
        '404':
          description: Carta ou Deck não encontrado
        '500':
          description: Erro interno

  /cards:
    get:
      summary: Listar todas as cartas
      tags:
        - Cartas
      responses:
        '200':
          description: Lista de cartas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartaDTO'
        '500':
          description: Erro interno

  /cards/{id}:
    get:
      summary: Obter detalhes de uma carta
      tags:
        - Cartas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Carta encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartaDTO'
        '404':
          description: Carta não encontrada
        '500':
          description: Erro interno

  /cards/search:
    get:
      summary: Buscar cartas por nome
      tags:
        - Cartas
      parameters:
        - name: nome
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resultado da busca
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartaDTO'
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno

  /users:
    post:
      summary: Criar novo usuário
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Usuário criado
        '400':
          description: Requisição inválida
        '500':
          description: Erro interno

  /users/{id}:
    get:
      summary: Obter dados de um usuário
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário encontrado
        '404':
          description: Usuário não encontrado
        '500':
          description: Erro interno

  /users/{id}/decks:
    get:
      summary: Listar decks de um usuário
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Decks do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckDTO'
        '404':
          description: Usuário não encontrado
        '500':
          description: Erro interno

  /decks/{id}/clone:
    post:
      summary: Clonar um deck
      tags:
        - Decks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Deck clonado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeckDTO'
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno

  /decks/public:
    get:
      summary: Listar decks públicos
      tags:
        - Decks
      responses:
        '200':
          description: Lista de decks públicos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckDTO'
        '500':
          description: Erro interno

  /decks/{id}/publish:
    post:
      summary: Tornar deck público
      tags:
        - Decks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deck publicado
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno

  /decks/{id}/export:
    get:
      summary: Exportar um deck
      tags:
        - Decks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Conteúdo do deck exportado
          content:
            application/json:
              schema:
                type: object
                properties:
                  conteudoTxt:
                    type: string
        '404':
          description: Deck não encontrado
        '500':
          description: Erro interno

components:
  schemas:
    DeckDTO:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        formato:
          type: string
        descricao:
          type: string
        cartas:
          type: array
          items:
            $ref: '#/components/schemas/CartaDTO'
        dataCriacao:
          type: string
          format: date-time

    CartaDTO:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        tipo:
          type: string
        cor:
          type: string
        custoMana:
          type: string
        quantidade:
          type: integer